\b Description 
Following diagram illustrates the interactions performed between the Host and the target STSE device during the API execution
\n\n

@startuml
    'Define participant (define order = display order left to right)
    participant "HOST" as HOST
    participant "STSE" as STSE
    
    activate HOST
    group stsafea_ecc_establish_shared_secret
        
        HOST -> STSE : establish shared secret (slot_number, remote_public_key)  
        Activate STSE
        return shared secret

    end 
@enduml

\n\n \b Use-case \b example 
\n The following applicative code snippet illustrates how to use this API function in main application.
\n\n

\code{.c}

	stse_ReturnCode_t ret;
	PLAT_UI8 private_key_slot_number = 0;
    stse_ecc_key_type_t key_type = STSE_ECC_KT_NIST_P_256;
    
	PLAT_UI8 pPrivate_key[stse_ecc_info_table[key_type].private_key_size];
	PLAT_UI8 pPublic_key[stse_ecc_info_table[key_type].public_key_size];
	PLAT_UI8 pShared_secret[stse_ecc_info_table[key_type].shared_secret_size];

	ret = stse_platform_ecc_generate_key_pair(
			key_type,
			pPrivate_key,
			pPublic_key);

	if(ret != STSE_OK )
	{
		/* Handle Error */
	}

	ret = stse_ecc_establish_shared_secret(
			pSTSE, 
			private_key_slot_number, 
			key_type, 
			pPublic_key, 
			pShared_secret);

	if(ret != STSE_OK )
	{
		/* Handle Error */
	}

\endcode

\sa stse_init
\sa stse_platform_ecc_generate_key_pair

<div style="page-break-after: always;"></div>